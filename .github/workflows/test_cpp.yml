name: testcpp
on: [push, pull_request, release]
jobs:
  test:
    strategy:
      matrix:
        config:
        - {
            name: "Ubuntu_Latest_GCC",
            os: ubuntu-latest,
            artifact: "ubuntu_gcc.7z",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            archiver: "7z a",
            generators: "Ninja"
          }
        # - {
        #     name: "Windows Latest MSVC",
        #     os: windows-latest,
        #     artifact: "windows_msvc.7z",
        #     build_type: "Release",
        #     cc: "cl",
        #     cxx: "cl",
        #     environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
        #     archiver: "7z a",
        #     generators: "Visual Studio 16 2019"
        #   }
    name: build
    runs-on: ${{ matrix.config.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: echo env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: setup on windows
        if: startsWith(matrix.config.os, 'windows')
        run: |
          choco install ninja cmake
          ninja --version
          cmake --version

      - name: setup on ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu_Latest_GCC')
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake libfmt-dev
          ninja --version
          cmake --version
          gcc --version

      - name: Configure
        shell: bash
        run: |
          mkdir build
          mkdir instdir
          cmake \
            -S 02_src \
            -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -G "${{ matrix.config.generators }}" \
            -DCMAKE_INSTALL_PREFIX:PATH=instdir

      - name: Build
        shell: bash
        run: cmake --build build --config ${{ matrix.config.build_type }}

      - name: Install Strip
        shell: bash
        run: cmake --install build --strip

      - name: Pack
        shell: bash
        working-directory: instdir
        run: |
          ${{ matrix.config.archiver }} ../${{ matrix.config.artifact }} .
          ls -laR
          pwd

      - name: Upload
        if: github.event_name == 'release' && (github.event.action == 'created')
        uses: actions/upload-artifact@v1
        with:
          path: ./${{ matrix.config.artifact }}
          name: ${{ matrix.config.artifact }}

      - name: Upload release asset
        if: github.event_name == 'release' && (github.event.action == 'created')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ matrix.config.artifact }}
          asset_name: ${{ matrix.config.artifact }}
          asset_content_type: application/zip